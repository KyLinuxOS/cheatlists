(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{310:function(e,v,t){"use strict";t.r(v);var i=t(28),l=Object(i.a)({},(function(){var e=this,v=e.$createElement,t=e._self._c||v;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"vim"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#vim"}},[e._v("#")]),e._v(" VIM")]),e._v(" "),t("h2",{attrs:{id:"installation"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#installation"}},[e._v("#")]),e._v(" Installation")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("sudo apt-get install vim-gtk")]),e._v(" installe vim et son GUI. Permet au passage d'utiliser le clipboard.")])]),e._v(" "),t("h2",{attrs:{id:"configuration"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#configuration"}},[e._v("#")]),e._v(" Configuration")]),e._v(" "),t("ul",[t("li",[e._v("Pour l'instance de vim en cours "),t("em",[e._v("(en mode normal)")]),e._v(" :\n"),t("ul",[t("li",[t("code",[e._v(":set NomOption?")]),e._v(" affiche l'état de l'option "),t("code",[e._v("NomOption")]),e._v(";")]),e._v(" "),t("li",[t("code",[e._v(":set NomOption")]),e._v(" active l'option "),t("code",[e._v("NomOption")]),e._v(".\n"),t("ul",[t("li",[t("code",[e._v(":set NomOption=valeurOption")]),e._v(" affecte la valeur "),t("code",[e._v("valeurOption")]),e._v(" à l'option "),t("code",[e._v("NomOption")]),e._v(".")])])]),e._v(" "),t("li",[t("code",[e._v(":set noNomOption")]),e._v(" désactive l'option "),t("code",[e._v("NomOption")]),e._v(".")])])]),e._v(" "),t("li",[t("code",[e._v("~/.vimrc")]),e._v(" fichier de configuration de VIM\n"),t("ul",[t("li",[e._v("Récupérer la version d'exemple "),t("code",[e._v("/etc/vim/vimrc")]),e._v(" :"),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[e._v("cp")]),e._v(" /etc/vim/vimrc  ~/.vimrc\n")])])])]),e._v(" "),t("li",[e._v("Quelques options pratiques :"),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('set mouse=a\t\t" Enable mouse usage (all modes)\nset number      " Show line numbers\nset showcmd\t\t" Show (partial) command in status line.\nset showmatch\t\t" Show matching brackets.\nset background=dark " Dark background\n"set ignorecase\t\t" Do case insensitive matching\n"set smartcase\t\t" Do smart case matching\n"set incsearch\t\t" Incremental search\n"set autowrite\t\t" Automatically save before commands like :next and :make\n"set hidden\t\t" Hide buffers when they are abandoned\n')])])])]),e._v(" "),t("li",[e._v("Indentation"),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('filetype plugin indent on\n" show existing tab with 4 spaces width\nset tabstop=4\n" when indenting with \'>\', use 4 spaces width\nset shiftwidth=4\n" On pressing tab, insert 4 spaces\nset expandtab\n')])])]),e._v("ou"),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('set expandtab       "Use softtabstop spaces instead of tab characters for indentation\nset shiftwidth=4    "Indent by 4 spaces when using >>, <<, == etc.\nset softtabstop=4   "Indent by 4 spaces when pressing <TAB>\n\nset autoindent      "Keep indentation from previous line\nset smartindent     "Automatically inserts indentation in some cases\nset cindent         "Like smartindent, but stricter and more customisable\n')])])])])])])]),e._v(" "),t("h2",{attrs:{id:"utilisation"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#utilisation"}},[e._v("#")]),e._v(" Utilisation")]),e._v(" "),t("ul",[t("li",[e._v("Lancer vim\n"),t("ul",[t("li",[t("code",[e._v("vi")]),e._v(" ou "),t("code",[e._v("vim")]),e._v(" lance vim dans le terminal.")]),e._v(" "),t("li",[t("code",[e._v("gvim")]),e._v(" lance le GUI de vim.")]),e._v(" "),t("li",[t("code",[e._v("vimtutor")]),e._v(" lance le tutoriel")]),e._v(" "),t("li",[t("code",[e._v("vi nomFichier")]),e._v(" ou "),t("code",[e._v("vim nomFichier")]),e._v(" ouvre un fichier avec vim.")])])]),e._v(" "),t("li",[e._v("Changer de mode\n"),t("ul",[t("li",[t("code",[e._v("Echap")]),e._v(" mode normal\n"),t("ul",[t("li",[t("code",[e._v(":")]),e._v(" mode commande\n"),t("ul",[t("li",[t("code",[e._v(":!")]),e._v(" mode commande externe (exemple "),t("code",[e._v("ls")]),e._v(")")])])])])]),e._v(" "),t("li",[t("code",[e._v("i")]),e._v(" mode insertion")]),e._v(" "),t("li",[t("code",[e._v("a")]),e._v(" mode ajout")])])]),e._v(" "),t("li",[e._v("Mode normal :\n"),t("ul",[t("li",[t("code",[e._v("opérateurQuantificateurMouvement")]),e._v(" exécute la commande de l'"),t("code",[e._v("opérateur")]),e._v(" sur le "),t("code",[e._v("Mouvement")]),e._v(" un certain nombre de fois (correspondant au "),t("code",[e._v("Quantificateur")]),e._v("). Exemples :\n"),t("ul",[t("li",[t("code",[e._v("2w")]),e._v(" déplace le curseur de 2 mots. Ici l'"),t("code",[e._v("opérateur")]),e._v(" est vide, le "),t("code",[e._v("Quantificateur")]),e._v(" est "),t("code",[e._v("2")]),e._v(" et le "),t("code",[e._v("Mouvement")]),e._v(" est "),t("code",[e._v("w")]),e._v(".")]),e._v(" "),t("li",[t("code",[e._v("d2w")]),e._v(" efface 2 mots entiers à partir du curseur :\n"),t("ul",[t("li",[t("code",[e._v("d")]),e._v(" : l'opérateur (ici effacer).")]),e._v(" "),t("li",[t("code",[e._v("2")]),e._v(" : le quantificateur.")]),e._v(" "),t("li",[t("code",[e._v("w")]),e._v(" : le mouvement (ici le mot entier).")])])])])]),e._v(" "),t("li",[e._v("Mouvements :\n"),t("ul",[t("li",[t("code",[e._v("OpérateurOpérateur")]),e._v(" applique l'opérateur sur la ligne entière. Exemple : "),t("code",[e._v("yy")]),e._v(" pour copier la ligne.")]),e._v(" "),t("li",[t("code",[e._v("0")]),e._v(" va au début de la ligne.")]),e._v(" "),t("li",[t("code",[e._v("$")]),e._v(" va à la fin de la ligne.")]),e._v(" "),t("li",[t("code",[e._v("h")]),e._v(" va à gauche.")]),e._v(" "),t("li",[t("code",[e._v("j")]),e._v(" va en bas.")]),e._v(" "),t("li",[t("code",[e._v("k")]),e._v(" va en haut.")]),e._v(" "),t("li",[t("code",[e._v("l")]),e._v(" va à droite.")]),e._v(" "),t("li",[t("code",[e._v("gg")]),e._v(" va à la première ligne du fichier.")]),e._v(" "),t("li",[t("code",[e._v("G")]),e._v(" va à la dernière ligne du fichier.\n"),t("ul",[t("li",[t("code",[e._v("1987G")]),e._v(" va à la ligne numéro 1987.")])])])])])])]),e._v(" "),t("li",[e._v("Enregistrer le fichier "),t("em",[e._v("(en mode normal)")]),e._v(" "),t("ul",[t("li",[t("code",[e._v(":w")]),e._v(" enregistre le fichier.\n"),t("ul",[t("li",[t("code",[e._v(":w nomFichier")]),e._v(" enregistrer sous un nom particulier.")])])])])]),e._v(" "),t("li",[e._v("Quitter vim "),t("em",[e._v("(en mode normal)")]),e._v(" "),t("ul",[t("li",[t("code",[e._v(":q")]),e._v(" quitte vim si aucun changement n'a été fait.")]),e._v(" "),t("li",[t("code",[e._v(":q!")]),e._v(" quitte sans enregistrer.")]),e._v(" "),t("li",[t("code",[e._v(":wq")]),e._v(" enregistre et quitte vim.")]),e._v(" "),t("li",[t("code",[e._v(":x")]),e._v(" ou "),t("code",[e._v("ZZ")]),e._v(" enregistre seulement si des modifications ont été faites.")])])]),e._v(" "),t("li",[e._v("Annuler et refaire\n"),t("ul",[t("li",[t("code",[e._v("u")]),e._v(" annule la dernière commande.")]),e._v(" "),t("li",[t("code",[e._v("U")]),e._v(" annule toutes les modifications apportées à la ligne du curseur.")]),e._v(" "),t("li",[t("code",[e._v("ctl + r")]),e._v(" refait la dernière commande.")])])]),e._v(" "),t("li",[e._v("Navigation "),t("em",[e._v("(en mode normal)")]),e._v(" "),t("ul",[t("li",[e._v("Déplacement du curseur en mode normal\n"),t("ul",[t("li",[e._v("Déplacement par caractère\n"),t("ul",[t("li",[e._v("Touches fléchées")]),e._v(" "),t("li",[e._v("Touches hjkl")]),e._v(" "),t("li",[t("code",[e._v("0")]),e._v(" place le curseur au début de la ligne")]),e._v(" "),t("li",[t("code",[e._v("$")]),e._v(" place le curseur à la fin de la ligne")])])]),e._v(" "),t("li",[e._v("Déplacement par mot\n"),t("ul",[t("li",[t("code",[e._v("w")]),e._v(" place le curseur en début de mot")]),e._v(" "),t("li",[t("code",[e._v("e")]),e._v(" place le curseur en fin de mot")]),e._v(" "),t("li",[e._v("On peut se déplacer de plusieurs mots à la fois en ajoutant un nombre devant la lettre\n"),t("ul",[t("li",[e._v("exemple : "),t("code",[e._v("4w")]),e._v(" déplace de 4 mots")])])])])]),e._v(" "),t("li",[e._v("Déplacement par ligne\n"),t("ul",[t("li",[t("code",[e._v("1")]),e._v(" déplace d'une ligne vers le bas")]),e._v(" "),t("li",[t("code",[e._v("2")]),e._v(" déplace de 2 lignes vers le bas")]),e._v(" "),t("li",[t("code",[e._v("3")]),e._v(" déplace de 3 lignes vers le bas")]),e._v(" "),t("li",[e._v("...")])])])])])])]),e._v(" "),t("li",[e._v("Edition de texte\n"),t("ul",[t("li",[e._v("Ajout "),t("em",[e._v("(en mode normal)")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("i")]),e._v(" passe en mode "),t("em",[e._v("insertion")]),e._v(" pour ajouter du texte au niveau du curseur.")]),e._v(" "),t("li",[t("code",[e._v("A")]),e._v(" passe en mode "),t("em",[e._v("ajout")]),e._v(" pour ajouter du texte à la fin de la ligne du curseur.")])])]),e._v(" "),t("li",[e._v("Copier / coller depuis le clipboard système "),t("em",[e._v("(en mode normal)")]),e._v(" "),t("ul",[t("li",[t("code",[e._v('"+y')]),e._v(" + "),t("code",[e._v("mouvement")]),e._v(" copie.")]),e._v(" "),t("li",[t("code",[e._v('"+p')]),e._v(" + "),t("code",[e._v("mouvement")]),e._v(" colle. "),t("code",[e._v("p")]),e._v(" seul fonctionne aussi.")])])]),e._v(" "),t("li",[e._v("Indentation\n"),t("ul",[t("li",[t("em",[e._v("(en mode normal)")]),e._v(" "),t("ul",[t("li",[t("code",[e._v(">")]),e._v(" décale vers la droite.")]),e._v(" "),t("li",[t("code",[e._v("<")]),e._v(" décale vers la gauche.")])])]),e._v(" "),t("li",[t("em",[e._v("(en mode insertion)")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("ctl + t")]),e._v(" décale vers la droite ("),t("code",[e._v("t")]),e._v(" pour "),t("code",[e._v("tab")]),e._v(").")]),e._v(" "),t("li",[t("code",[e._v("ctl + d")]),e._v(" décale vers la gauche ("),t("code",[e._v("d")]),e._v(" pour "),t("code",[e._v("de-tab")]),e._v(").")])])])])]),e._v(" "),t("li",[e._v("Effacement "),t("em",[e._v("(en mode normal)")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("x")]),e._v(" efface le caractère sous le curseur.")]),e._v(" "),t("li",[t("code",[e._v("d4l")]),e._v(" ou "),t("code",[e._v("d4 + flèche droite")]),e._v(" efface 4 caractères à droite du curseur.")]),e._v(" "),t("li",[t("code",[e._v("d4h")]),e._v(" ou "),t("code",[e._v("d4 + flèche gauche")]),e._v(" efface 4 caractères à gauche du curseur.")]),e._v(" "),t("li",[t("code",[e._v("dw")]),e._v(" efface du curseur jusqu'au début du prochain mot.")]),e._v(" "),t("li",[t("code",[e._v("de")]),e._v(" efface du curseur jusqu'à la fin du mot courant.")]),e._v(" "),t("li",[t("code",[e._v("d$")]),e._v(" efface du curseur jusqu'à la fin de la ligne.")]),e._v(" "),t("li",[t("code",[e._v("d0")]),e._v(" efface du curseur jusqu'au début de la ligne.")]),e._v(" "),t("li",[t("code",[e._v("dd")]),e._v(" efface toute la ligne du curseur.")]),e._v(" "),t("li",[t("code",[e._v("#dd")]),e._v(" efface plusieurs lignes où "),t("code",[e._v("#")]),e._v(" est le nombre de lignes.")]),e._v(" "),t("li",[t("code",[e._v("p")]),e._v(" coller les dernières lignes effacées")])])]),e._v(" "),t("li",[e._v("Insertion\n"),t("ul",[t("li",[t("code",[e._v(":r nomFichier")]),e._v(" insère un fichier à la position du curseur (l'autocomplétion avec "),t("code",[e._v("tab")]),e._v(" fonctionne !).")])])])])]),e._v(" "),t("li",[e._v("Rechercher "),t("em",[e._v("(en mode normal)")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("/texteARechercher")]),e._v(" cherche vers le bas.")]),e._v(" "),t("li",[t("code",[e._v("?texteARechercher")]),e._v(" cherche vers le haut.")]),e._v(" "),t("li",[t("code",[e._v("n")]),e._v(" va vers la prochaine occurence.")]),e._v(" "),t("li",[t("code",[e._v("N")]),e._v(" va vers la précédente occurence.")]),e._v(" "),t("li",[t("code",[e._v("%")]),e._v(" quand le curseur est sur une parenthèse pour aller à la parenthèse correspondante "),t("em",[e._v("({[]})")]),e._v(".")])])]),e._v(" "),t("li",[e._v("Rechercher et remplacer "),t("em",[e._v("(en mode normal)")]),e._v(" "),t("ul",[t("li",[t("code",[e._v(":s/texteARemplacer/texteDeRemplacement/g")]),e._v(" change toutes les occurences du texte dans la ligne courante (on peut omettre "),t("code",[e._v("/g")]),e._v(" pour ne remplacer que la première occurence).")]),e._v(" "),t("li",[t("code",[e._v("#,#s/texteARemplacer/texteDeRemplacement/g")]),e._v(" change toutes les occurences du texte entre 2 lignes (remplacer les "),t("code",[e._v("#")]),e._v(" par des numéros de ligne).")]),e._v(" "),t("li",[t("code",[e._v("%s/texteARemplacer/texteDeRemplacement/g")]),e._v(" change toutes les occurences du texte dans tout le fichier.")]),e._v(" "),t("li",[t("code",[e._v("%s/texteARemplacer/texteDeRemplacement/gc")]),e._v(" change toutes les occurences du texte dans tout le fichier avec demande de confirmation pour chaque remplacement.")])])]),e._v(" "),t("li",[e._v("Diviser l'écran\n"),t("ul",[t("li",[t("code",[e._v(":sp")]),e._v(" divise l'écran horizontalement.\n"),t("ul",[t("li",[t("code",[e._v(":sp nomFichier")]),e._v(" divise l'écran horizontalement et ouvre un fichier dans la partie haute.")])])]),e._v(" "),t("li",[t("code",[e._v(":vsp")]),e._v(" divise l'écran verticalement.\n"),t("ul",[t("li",[t("code",[e._v(":vsp nomFichier")]),e._v(" divise l'écran verticalement et ouvre un fichier dans la partie gauche.")])])]),e._v(" "),t("li",[t("code",[e._v("ctl")]),e._v(" + "),t("code",[e._v("w")]),e._v(" passe en mode action :\n"),t("ul",[t("li",[t("code",[e._v("w")]),e._v(" change de viewport.")]),e._v(" "),t("li",[t("code",[e._v("h")]),e._v(" ou "),t("code",[e._v("j")]),e._v(" ou "),t("code",[e._v("k")]),e._v(" ou "),t("code",[e._v("l")]),e._v(" change de viewport selon la direction de la touche utilisée.")]),e._v(" "),t("li",[t("code",[e._v("+")]),e._v(" agrandit le viewport actuel.")]),e._v(" "),t("li",[t("code",[e._v("-")]),e._v(" réduit le viewport actuel.")]),e._v(" "),t("li",[t("code",[e._v("=")]),e._v(" égalise les dimensions des viewports.")]),e._v(" "),t("li",[t("code",[e._v("r")]),e._v(" ou "),t("code",[e._v("R")]),e._v(" change la position des viewports.")]),e._v(" "),t("li",[t("code",[e._v("q")]),e._v(" ferme le viewport actuel.")])])])])])])])}),[],!1,null,null,null);v.default=l.exports}}]);