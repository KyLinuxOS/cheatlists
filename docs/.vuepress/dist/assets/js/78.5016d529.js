(window.webpackJsonp=window.webpackJsonp||[]).push([[78],{337:function(e,t,a){"use strict";a.r(t);var n=a(28),o=Object(n.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"regex"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#regex"}},[e._v("#")]),e._v(" Regex")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://regex101.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Regex"),a("OutboundLink")],1)]),e._v(" "),a("ul",[a("li",[a("code",[e._v("?=")]),e._v(", "),a("code",[e._v("?!")]),e._v(", "),a("code",[e._v("?:")]),e._v(" "),a("ul",[a("li",[a("p",[e._v('The difference between ?= and ?! is that the former requires the given expression to match and the latter requires it to not match. For example a(?=b) will match the "a" in "ab", but not the "a" in "ac". Whereas a(?!b) will match the "a" in "ac", but not the "a" in "ab".')]),e._v(" "),a("p",[e._v('The difference between ?: and ?= is that ?= excludes the expression from the entire match while ?: just doesn\'t create a capturing group. So for example a(?:b) will match the "ab" in "abc", while a(?=b) will only match the "a" in "abc". a(b) would match the "ab" in "abc" and create a capture containing the "b".')]),e._v(" "),a("p",[a("code",[e._v("?:")]),e._v("  is for non capturing group\n"),a("code",[e._v("?=")]),e._v("  is for positive look ahead\n"),a("code",[e._v("?!")]),e._v("  is for negative look ahead\n"),a("code",[e._v("?<=")]),e._v(" is for positive look behind\n"),a("code",[e._v("?<!")]),e._v(" is for negative look behind")])]),e._v(" "),a("li",[a("p",[e._v("Exemple: "),a("code",[e._v("^application\\/(?:.+\\+)?json$")])])])])])])])}),[],!1,null,null,null);t.default=o.exports}}]);