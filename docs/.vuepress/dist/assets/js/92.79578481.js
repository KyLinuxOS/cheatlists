(window.webpackJsonp=window.webpackJsonp||[]).push([[92],{258:function(e,n,a){"use strict";a.r(n);var t=a(28),r=Object(t.a)({},(function(){var e=this,n=e.$createElement,a=e._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"versioning"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#versioning"}},[e._v("#")]),e._v(" Versioning")]),e._v(" "),a("h2",{attrs:{id:"semantic-versioning-2-0-0"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#semantic-versioning-2-0-0"}},[e._v("#")]),e._v(" Semantic versioning 2.0.0")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://semver.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Source"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("Given a version number MAJOR.MINOR.PATCH, increment the:")]),e._v(" "),a("ul",[a("li",[e._v("MAJOR version when you make incompatible API changes,")]),e._v(" "),a("li",[e._v("MINOR version when you add functionality in a backwards compatible manner, and")]),e._v(" "),a("li",[e._v("PATCH version when you make backwards compatible bug fixes.")])]),e._v(" "),a("p",[e._v("Additional labels for pre-release and build metadata are available as extensions to the MAJOR.MINOR.PATCH format.")])])}),[],!1,null,null,null);n.default=r.exports}}]);